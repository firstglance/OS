启动：
加电启动、正常运行，应用程序工作
提供接口：
为应用提供服务、控制外设与外设交互，涉及到：中断异常系统调用

加电后包括：CPU、内存、I/O

磁盘存放：Bootloader、OS
由Bios提供支持，进行检测外设，去加载软件
加电启动后，Bios从这个地址执行，自检
如：屏幕、键盘、鼠标等进行初始化检查，
接下来，把bootloader放到内存中去
bootloader（在硬盘的第一个扇区）
bootloader加载OS到内存

BIOS:
BIOS:将Booeloader从磁盘的引导扇区(512字节)加载到内存的0x7c00，
然后CPU的控制权就有Bootloader来掌控
Bootloader:
接下来Bootloader做的事情，加载OS
是找到硬盘中OS的起至扇区，以及OS长度，把磁盘块从磁盘读到内存完成后
把CPU控制权交给OS，即：跳到OS的起始地址去执行，OS就可以在内存中进行工作
前期初始化，后期创建程序运行，硬件管理处于OS下


操作系统与设备和程序交互

InterFace:
外设：中断和I/O
应用程序：系统调用和异常
三个：系统调用、异常、中断

系统调用：app向OS发出服务请求，希望操作系统提供支持，让OS完成相应功能(主动)
异常：应用程序执行过程中出现意外的情况(非主动，app执行中出现意外情况)
中断：来自外设，外设有事情需要OS去支持，通过中断机制让OS感知，让OS支持。

定义：
系统调用(来源于应用程序)
    app主动向操作系统发出服务请求
异常(来源于不良的应用程序)
    非法指令或者其他坏的处理状态(如：内存出错)
中断(来源于外设)
    来自不同的硬件设备的计时器和网络的中断

为什么通过系统调用外设？而不是通过应用程序调用外设？
OS是可以信任的软件、OS具有计算机控制权，可执行特权指令，为上层应用提供简单的接口，屏蔽的层复杂性
应用程序不安全
